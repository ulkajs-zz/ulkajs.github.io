<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{% values.frontMatter.title %} | {% info.configs.siteMetaData.title %}</title>
    {% $import('../partials/meta-tags.ulka') %}
    <link rel="shortcut icon" href="/logo.png" type="image/x-icon" />
    <link rel="stylesheet" href="{% $assets('../styles/style.css') %}" />
    <link rel="stylesheet" href="{% $assets('../styles/highlight.css') %}" />

    {% $import('../partials/gtag.ulka') %}

    {% $import('../partials/fonts.ulka', {}, true) %}

    <style>
        
    .sidebar-nav {
      padding: 0 !important;
    }

    .sidebar-nav .nav-link {
      margin: 0;
    }

    .sidebar-nav {
      display: none;
    }

    .ulka-heading {
      position: relative;
      margin-left: -20px;
      padding-left: 20px;
    }
    .ulka-heading-anchor {
      visibility: hidden;
      position: absolute;
      top: 50%;
      left: 0;
      fill: var(--text-color);
      transform: translateY(-50%);
    }

    .ulka-heading:hover .ulka-heading-anchor {
      visibility: visible;
    }

    .sidebar-main {
      display: flex;
      justify-content: space-between;
    }

    .sidebar-main .content {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      min-height: 100%;
      width: 100%;
      overflow: hidden;
    }

    .sidebar-main .content .container {
      min-height: calc(100% - 60px);
      padding: 20px 0;
      padding-bottom: 5px;
      display: flex;
      justify-content: space-between;
      flex-direction: column;
    }

    .sidebar-main .sidebar {
      min-width: 300px;
      background: var(--heavy-background-color);
      height: calc(100vh - 60px);
      position: sticky;
      top: 60px;
      bottom: 0px;
      padding: 40px 20px;
      overflow-y: auto;
    }

    .sidebar-main-link a {
      text-decoration: none;
      color: var(--text-color);
      font-size: 17px;
      padding: 5px 0px;
      display: block;
    }

    a.active {
      text-decoration: none;
      font-weight: 500;
      color: var(--ulka-primary);
    }

    .sidebar-main .content a {
      color: var(--ulka-primary);
      text-decoration: none;
    }


    @media (max-width: 700px) {
      .sidebar-main .sidebar {
        position: fixed;
        right: -400px;
        transition: right 0.4s;
        z-index: 20;
      }
      .toggle-sidebar {
        display: block;
        padding-left: 20px;
      }
      .sidebar-nav {
        display: block;
      }

      nav .nav-links {
        display: none;
      }
    }

      footer {
        text-align: center;
        min-height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--heavy-background-color);
        color: var(--text-color)
      }
     
      .prev-next {
        display: flex;
        margin-top: 40px;
        justify-content: space-between;
      }

      .prev-next a {
        display: block;
        background: var(--heavy-background-color);
        padding: 10px;
        border-radius: 5px;
        border: 0.5px solid rgba(0,0,0,0.5);
      }

      .sub-links {
        margin-left: 15px;
      }

      .sub-links a {
        font-weight: 400;
        font-size: 16px;
        display: inline;
      }

      .edit-on-github {
        margin-top: 20px;
        background: var(--heavy-background-color);
        padding: 10px;
        border-radius: 5px;
        display: flex;
        align-items: center;
        width: fit-content;
        border: 0.5px solid rgba(0,0,0,0.5);
      }

      hr {
        opacity: 0.3;
        margin-top: 30px;
        margin-bottom: 30px;
      }

    </style>
  </head>

  <body class="light">
   {% $import('../partials/nav.ulka', {path: `/${name}`}) %}
    <main class="sidebar-main">
     <div class="sidebar">
        <ul class="sidebar-nav">
          <li class="nav-link">
              <a href="/">Home</a>
          </li>
          {% $import('../partials/nav-links.ulka') %}
           <li class="nav-link">
            <button onclick="toggleTheme()" class="toggle-mode">h</button>
          </li>
        <hr />
        </ul>
      {% const curContent = contents[name] %}
        {% 
         [...curContent]
            .sort((a, b) => a.values.frontMatter.page - b.values.frontMatter.page)
            .map(content => `
            <div class="sidebar-main-link">
              <a ${content.link === link ? "class = 'active'": ""} href="${content.link}">${content.values.frontMatter.title}</a>
              ${content.link === link ? `
                <div class="sub-links">
                ${
                content.values.frontMatter.links
                
                ? content.values.frontMatter.links
                  .map(l => `<a href="${l.link}">> ${l.title}</a>`)
                  .join('<br />')
                : ""

                }
                </div>
              `: ""}
            </div>
          `)
        %}        
      </div>
      <div class="content">
        <div class="container">
          <div>
            <h1 style="padding: 20px 0;">{% values.frontMatter.title %}</h1>
          {% data %}
           <a class="edit-on-github" target="__blank" href="https://github.com/ulkajs/ulkajs.github.io/tree/main/{% source %}"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" class="css-9u48bm" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"></path></svg>&nbsp;
          <span>Edit this page on github</span>
           </a>
          </div>
          <div class="prev-next">
            {% 
              const prev = contents[name].filter(d => d.values.frontMatter.page === values.frontMatter.page - 1)[0]
              const next = contents[name].filter(d => d.values.frontMatter.page === values.frontMatter.page + 1)[0]
            %}
            {% prev ? `<p><a href="${prev.link}">&lt; ${prev.values.frontMatter.title}</a></p>`: "<p></p>" %}
            {% next ? `<p><a href="${next.link}">${next.values.frontMatter.title} &gt;</a></p>`: "<p></p>" %}
          </div>
        </div>
        {% $import('../partials/footer.ulka') %}
      </div>
    </main>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.2.1/highlight.min.js" integrity="sha512-Ypjm0o7jOxAd4hpdoppSEN0TQOC19UtPAqD+4s5AlXmUvbmmS/YMxYqAqarQYyxTnB6/rqip9qcxlNB/3U9Wdg==" crossorigin="anonymous"></script>
    <script>
      document.addEventListener('DOMContentLoaded', (event) => {
        document.querySelectorAll('pre code').forEach((block) => {
          if(!hljs) return
          hljs.registerLanguage('ulka', highlightUlka);
          hljs.highlightBlock(block);
        });
      }); 

      function highlightUlka(hljs) {
        return {
          name: "ulka",
          aliases: ["ulka"],
          subLanguage: "xml",
          contains: [
            hljs.C_LINE_COMMENT_MODE,
            hljs.C_BLOCK_COMMENT_MODE,
            {
              begin: "\{%",
              end: "%}",
              subLanguage: "javascript",
              excludeBegin: true,
              excludeEnd: true,
              contains: [
                {
                  begin: "`",
                  end: "`",
                  subLanguage: "xml",
                  excludeBegin: true,
                  excludeEnd: true,
                }
              ]
            },
          ]
        }
      }
      
    </script> 

   <script>
      const themeTogglers = document.querySelectorAll('.toggle-mode')

      function findTheme() {
        let theme = localStorage.getItem('theme')
        return ['dark', 'light'].includes(theme) ? theme : 'dark'
      }

      function setTheme(theme) {
        document.body.className = theme
        themeTogglers.forEach(toggle => {
          toggle.textContent = theme === 'light' ? 'ðŸŒ™' : 'ðŸŒ•'
        })
        localStorage.setItem('theme', theme)
      }

      function toggleTheme() {
        const theme = findTheme()
        const newTheme = theme === 'light' ? 'dark' : 'light'
        setTheme(newTheme)
      }

      setTheme(findTheme())
    </script>

    <script>
      const sidebar = document.querySelector('.sidebar-main .sidebar')
      const toggler = document.querySelector('.toggle-sidebar')

      toggler.addEventListener('click', e => {
        sidebar.classList.toggle('right-0')
      })
    </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/quicklink/2.0.0/quicklink.umd.js"></script>
    <script>
      window.addEventListener('load', () => {
        quicklink.listen()
      })
    </script>
  </body>
</html>
